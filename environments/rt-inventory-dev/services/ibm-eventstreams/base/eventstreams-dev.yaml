apiVersion: eventstreams.ibm.com/v1beta1
kind: EventStreams
metadata:
  name: dev
  namespace: rt-inventory-dev
spec:
  version: 10.5.0
  license:
    accept: true
    use: CloudPakForIntegrationNonProduction
  requestIbmServices:
    iam: true
    monitoring: true
  adminApi: {}
  adminUI: {}
  metrics: {}
  apicurioRegistry: 
    livenessProbe:
      initialDelaySeconds: 120
  collector: {}
  restProducer: {}
  security:
    internalTls: TLSv1.2
  strimziOverrides:
    entityOperator: 
      topicOperator:
        resources:
          limits:
            cpu: "1"
            memory: 3Gi
          requests:
            cpu: 90m
            memory: 2Gi
      userOperator:
        resources:
          limits:
            cpu: "1"
            memory: 1500Mi
          requests:
            cpu: 203m
            memory: 650Mi
    kafka:
      replicas: 3
      resources:
        requests:
          memory: 12Gi
          cpu: "2"
        limits:
          memory: 12Gi
          cpu: "4"
      authorization:
        authorizerClass: com.ibm.eventstreams.runas.authorizer.RunAsAuthorizer
        supportsAdminApi: true
        type: custom
      config:
        inter.broker.protocol.version: '2.8'
        interceptor.class.names: com.ibm.eventstreams.interceptors.metrics.ProducerMetricsInterceptor
        log.cleaner.threads: 6
        log.message.format.version: '2.8'
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 3
        offsets.topic.replication.factor: 3
        default.replication.factor: 3
        min.insync.replicas: 2
      listeners:
        - name: plain
          type: internal
          port: 9092
          tls: false
        - name: external
          port: 9094
          type: route
          tls: true
          authentication:
            type: scram-sha-512
        - name: tls
          port: 9093
          type: internal
          tls: true
          authentication:
            type: tls
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: metrics-config
      storage:
        class: ocs-storagecluster-ceph-rbd
        size: 1000Gi
        type: persistent-claim
    zookeeper:
      replicas: 3
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: metrics-config
      storage:
        class: ocs-storagecluster-ceph-rbd
        size: 2Gi
        type: persistent-claim
